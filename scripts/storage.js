"use strict";

// ASSIGNMENT 03 - ·ª®ng d·ª•ng ƒë·ªçc tin t·ª©c

// ------------------
// ------------------
// ELEMENT
// ELEMENT - INPUT FORM (register/login)
const firstNameInput = document.getElementById("input-firstname");
const lastNameInput = document.getElementById("input-lastname");
const usernameInput = document.getElementById("input-username");
const passwordInput = document.getElementById("input-password");
const passwordConfirmInput = document.getElementById("input-password-confirm");

// ELEMENT - INPUT FORM (Settings)
const pageSizeInput = document.getElementById("input-page-size");
const categoryInput = document.getElementById("input-category");

// ELEMENT - NEWS PAGINATION
const prevBtn = document.getElementById("btn-prev");
const nextBtn = document.getElementById("btn-next");
const numPage = document.getElementById("page-num");

// ELEMENT - CONTAINER DISPLAY NEWS
const newsContainer = document.getElementById("news-container");

// ------------------
// ------------------
// VARIABLE
// VARIABLE m·∫£ng qu·∫£n l√Ω ng∆∞·ªùi d√πng, ch·ª©a c√°c Instance ƒë∆∞·ª£c t·∫°o t·ª´ Class User
const KEY = "USER_ARRAY";
const userArr = getFromStorage(KEY, []);

// VARIABLE l∆∞u th√¥ng tin user ƒëang ƒëƒÉng nh·∫≠p
const CURRENT = "USER_CURRENT";
let currentUser =
  getFromStorage(CURRENT, null) && parseUser(getFromStorage(CURRENT, null));

// VARIABLE c·∫≠p nh·∫≠t s·ªë th·ª© t·ª± page ƒëang hi·ªÉn th·ªã tin t·ª©c, default 1
let currentPage = 1;

// VARIABLE c·∫≠p nh·∫≠t s·ªë page t·ªëi ƒëa l·∫•y t·ª´ API news theo url
let maxPage;

// VARIABLE c·∫≠p nh·∫≠t d·ªØ li·ªáu t√¨m ki·∫øm ƒë·ªÉ chuy·ªÉn trang
let query;

// VARIABLE l∆∞u th√¥ng tin v·ªÅ c√°c Task
const TODO = "TODO_ARRAY";
const toDoArr = getFromStorage(TODO, []);

// ------------------
// ------------------
// FUNCTION - STORAGE
////////////////////////////////////
// FUNCTION l∆∞u DATA xu·ªëng LocalStorage ()
function saveToStorage(key, value) {
  localStorage.setItem(key, JSON.stringify(value));
}

////////////////////////////////////
// FUNCTION l·∫•y DATA t·ª´ LocalStorage theo Key t∆∞∆°ng ·ª©ng
function getFromStorage(key, defaultVal) {
  return JSON.parse(localStorage.getItem(key)) || defaultVal;
}

////////////////////////////////////
// FUNCTION chuy·ªÉn t·ª´ JS Object sang Class Instance nh∆∞ sau:
function parseUser(userData) {
  const user = new User(
    userData.firstName,
    userData.lastName,
    userData.username,
    userData.password,

    // for API news
    userData.category,
    userData.pageSize
  );
  return user;
}

// ------------------
// ------------------
// FUNCTION - VALIDATE INPUT
////////////////////////////////////
// FUNCTION: VALIDATE th√¥ng tin Input, ng∆∞·ª£c l·∫°i th√¨ th√¥ng b√°o l·ªói cho ng∆∞·ªùi d√πng
// ki·ªÉm tra khi ng∆∞·ªùi d√πng ƒëƒÉng k√Ω ho·∫∑c ƒëƒÉng nh·∫≠p, style = "register"/ "login"
const validateInput = function (user, style = "register") {
  // status variable
  let isValidate = true;

  // check data input
  for (const property in user) {
    // 1> Kh√¥ng c√≥ tr∆∞·ªùng n√†o b·ªã b·ªè tr·ªëng
    if (user[property] === "") {
      alert(`Please input for ${property.toUpperCase()}`);
      isValidate = false;
      break;
    }

    // 2> Username kh√¥ng ƒë∆∞·ª£c tr√πng v·ªõi Username c·ªßa c√°c ng∆∞·ªùi d√πng tr∆∞·ªõc ƒë√≥
    if (
      style === "register" &&
      property === "username" &&
      userArr.findIndex((u) => u.username === user.username) !== -1
    ) {
      alert(`The USERNAME has already been. Please input the ANOTHER!`);
      isValidate = false;
      break;
    }

    // 3> Password ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±
    if (
      style === "register" &&
      property === "password" &&
      user.password.length < 8
    ) {
      alert(`PASSWORD must be at least 8 characters!`);
      isValidate = false;
      break;
    }

    // 4> Password v√† Confirm Password ph·∫£i gi·ªëng nhau.
    if (
      style === "register" &&
      property === "passwordConfirm" &&
      user.password !== user.passwordConfirm
    ) {
      alert(`PASSWORD and PASSWORDCONFIRM must be the same!`);
      isValidate = false;
      break;
    }
  }

  return isValidate;
};

////////////////////////////////////
// FUNCTION: VALIDATE th√¥ng tin Login th√†nh c√¥ng (tr√πng v·ªõi User ƒë√£ c√≥), ng∆∞·ª£c l·∫°i th√¨ th√¥ng b√°o l·ªói cho ng∆∞·ªùi d√πng
const checkLoginUser = function (user) {
  // bi·∫øn check v√† l∆∞u user ƒëang Login
  const checkUser = userArr.find((u) => u.username === user.username);

  // check USERNAME
  if (!checkUser)
    return alert(`The USERNAME does not exist. Please try again!`);

  // check PASSWORD
  if (checkUser.password !== user.password)
    return alert(`The PASSWORD is incorrect. Please try again!`);

  return checkUser;
};

////////////////////////////////////
// FUNCTION
// FUNCTION: VALIDATE Input khi ng∆∞·ªùi d√πng thay ƒë·ªïi thi·∫øt l·∫≠p tham s·ªë cho b·∫£ng tin
const validateSettings = function () {
  // status variable
  let isValidate = true;

  // ki·ªÉm tra ng∆∞·ªùi d√πng ƒë√£ thay ƒë·ªïi c√†i ƒë·∫∑t ch∆∞a
  if (
    +pageSizeInput.value === currentUser.pageSize &&
    categoryInput.value === currentUser.category
  ) {
    alert("You haven't changed any settings!");
    isValidate = false;
    return isValidate;
  }

  // ki·ªÉm tra ƒëi·ªÅu ki·ªán l√† 1 <= pageSize <= 100 (max l√† 100 theo API news)
  if (pageSizeInput.value < 1 || pageSizeInput.value > 100) {
    alert('"News per page" must be between 1 and 100!');
    isValidate = false;
    return isValidate;
  }

  return isValidate;
};

// ------------------
// ------------------
// FUNCTION - FETCH AND DISPLAY NEWS
////////////////////////////////////
// FUNCTION: k·∫øt xu·∫•t danh s√°ch tin t·ª©c
// articles l√† m·∫£ng c√°c object
const renderNews = function (articles) {
  // 1> T·∫°o th√†nh ph·∫ßn cho HTML
  let html = "";

  // 2> K·∫øt xu·∫•t m·ªói b√†i b√°o v√†o html
  articles.forEach((article) => {
    html += `
  <div class="pb-4 border rounded">
    <div class="d-flex border rounded">
      <div class="col-4 p-0">
        <img
          src="${
            article.urlToImage
              ? article.urlToImage
              : "../images/Image_not_available.png"
          }"
          alt="img"
          class="img-fluid"
        />
      </div>
      <div class="col-8">
        <h4>${article.title}</h4>
        <p>${article.description ? article.description : "No description."}</p>
        <a href="${article.url}" target="blank" class="btn btn-primary">View</a>
      </div>
    </div>
  </div>`;
  });

  // 3> Th√™m html v√†o container ƒë·ªÉ hi·ªÉn th·ªã l√™n trang
  newsContainer.innerHTML = html;
};

////////////////////////////////////
// FUNCTION: l·∫•y d·ªØ li·ªáu tin t·ª©c t·ª´ API news v√† hi·ªÉn th·ªã cho ng∆∞·ªùi d√πng
const displayNews = async function (url) {
  try {
    // 1> T√¨m n·∫°p d·ªØ li·ªáu API
    const res = await fetch(url);
    if (!res.ok) throw new Error(`${res.status}`);

    // 2> L·∫•y json t·ª´ d·ªØ li·ªáu API
    const data = await res.json();
    if (data.status !== "ok")
      throw new Error(`ERROR: ${data.code} - ${data.message}`);

    // 3> Hi·ªÉn th·ªã tin t·ª©c
    renderNews(data.articles);

    // 4> C·∫≠p nh·∫≠t s·ªë page t·ªëi ƒëa l·∫•y t·ª´ API news theo url hi·ªán t·∫°i
    maxPage = Math.ceil(data.totalResults / currentUser.pageSize);
  } catch (err) {
    // th√¥ng b√°o l·ªói
    console.error(`${err} üí•`);
    alert(`${err.message} üí•`);

    // Reject promise returned from async function
    throw err;
  }
};

////////////////////////////////////
// FUNCTION: hi·ªÉn th·ªã n√∫t chuy·ªÉn gi·ªØa c√°c trang tin t·ª©c
const displayPagination = function () {
  // 1> Hi·ªÉn th·ªã numPage theo s·ªë trang hi·ªán t·∫°i
  numPage.textContent = currentPage;

  // 2> Khi ƒëang ·ªü Page s·ªë 1 th√¨ n√∫t "Previous" s·∫Ω b·ªã ·∫©n ƒëi
  currentPage === 1
    ? (prevBtn.style.display = "none")
    : (prevBtn.style.display = "block");

  // 3> N·∫øu nh∆∞ kh√¥ng th·ªÉ l·∫•y th√™m c√°c b√†i vi·∫øt n·ªØa, n√∫t "Next" s·∫Ω b·ªã ·∫©n ƒëi
  currentPage === maxPage
    ? (nextBtn.style.display = "none")
    : (nextBtn.style.display = "block");
};
